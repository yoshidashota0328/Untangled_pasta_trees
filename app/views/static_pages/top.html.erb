<div class="center">
  <div class="circle">
  <!--<img class="bgimage" src='https://gyazo.com/8f1a0854812d2efb856eeef514f6e646/raw'>-->
    <div class="inner"> <!-- 文字配置の基準となる親要素 -->
      <p class="text">Untangled pasta trees </p>
    </div>
  </div>
  <p style="color:red;">おしらせ:herokuの無料サービスの終了に伴い、2022年11月28日をもってこのサービスを終了または移転を計画しております。<br>本サービスをご利用の方は期日までにデータのバックアップをお願いします。</p>
  <%= link_to 'Create_tree',  new_tree_path, class: "caption link-text"%></br>
  <%= link_to 'All_trees', trees_path, class: "caption link-text"%></br>
  <%= link_to 'How_to_use', 'https://qiita.com/yoshidashota0328/private/dd67cbdb8ca7a7fd1d5f', class: "caption link-text"%>
</div>
<script>
$(function () {
  var availWidth = window.screen.width;
  const before = $('.text');
  const text = before.text(); // 文字をspanタグで囲む前のテキストを取得
  const textArray = text.split('');  // 取得したテキストを1文字ずつに分割し配列にして変数に格納
    
  let after = '';
  $.each(textArray,function(index,val){ // 配列の各文字をspanタグで囲み、繋げていく
    after += '<div class="move">' + val + "</div>";
  });  
    
  before.html(after);  // 元のテキストに生成したタグごと置き換え
    
  const textcnt = textArray.length;
  const circleR = ($('.circle').height()) / 2; // 円の半径
  const fontH = ($('.inner').height());
  const dist = circleR - fontH;
  const animTime = $('.text').css('animation-duration').slice(0, -1);  // アニメーション時間を取得し、「s」を切り捨て
    
  $('.move').each(function(index) {
    const num = index + 1;
    const radX = Math.sin(360 / textcnt * num * (Math.PI / 180)); // 文字の中心からのX軸方向の移動距離を計算
    const radY = Math.sin((90 - (360 / textcnt * num)) * (Math.PI / 180)); // 文字の中心からのY軸方向の移動距離（実際にはマイナス移動）を計算
    $(this).css({'transform': 'translate(' + dist * radX + 'px, ' + -(dist * radY) + 'px) rotateX(90deg) rotateY(' + 360 / textcnt * num + 'deg)', //1文字ずつ円形に等間隔で円形に配置
                'animation-delay': animTime / textcnt * num + 's', // 1文字ずつアニメーション開始時間を遅延
                  });  //
  });
  // 2つの値の間のランダムな整数を得る
  function getRandomInt(min, max) {
    min = Math.ceil(min);
    max = Math.floor(max);
    return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive
  }
  // アルファベットをランダムに１文字変数に代入する
  var particle = function particle() {
    // 生成する文字列の長さ
    var l = 1;

    // 生成する文字列に含める文字セット
    var c = "abcdefghijklmnopqrstuvwxyzABΓΔEZHΘIKΛMNΞOΠPΣTΥΦXΨΩ1234567890";

    var cl = c.length;
    var r = "";
    for(var i=0; i<l; i++){
      r += c[Math.floor(Math.random()*cl)];
    }
    var x = getRandomInt(0, availWidth)
    var size = getRandomInt(5, 15)
    $('body').append('<div class="particle" style="font-size: ' + size + 'px; left: ' + x + 'px;">' + r + '</div>')
  }
  var i = 1;
  var particleLoop = setInterval(function() {
    particle()
    i++;
    if(i > 400) clearInterval(particleLoop);  
  }, 50);

});
</script>